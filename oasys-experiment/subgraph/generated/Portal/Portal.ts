// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class TransactionDeposited extends ethereum.Event {
  get params(): TransactionDeposited__Params {
    return new TransactionDeposited__Params(this);
  }
}

export class TransactionDeposited__Params {
  _event: TransactionDeposited;

  constructor(event: TransactionDeposited) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get gasLimit(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get nonce(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get data(): Bytes {
    return this._event.parameters[5].value.toBytes();
  }
}

export class Portal extends ethereum.SmartContract {
  static bind(address: Address): Portal {
    return new Portal("Portal", address);
  }
}
